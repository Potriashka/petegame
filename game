import pygame
import randrange
successes, failures = pygame.init()
print("Initializing pygame: {0} successes and {1} failures.".format(successes, failures))

screen = pygame.display.set_mode((297, 343))
clock = pygame.time.Clock()
background_image = pygame.image.load('bg.jpg')
player_image = pygame.image.load('idle.png')
FPS = 60

right = []
right = ['right_1.png','right_2.png',
              'right_3.png','right_4.png',
              'right_5.png','right_6.png']

left = []
left = ['left_1.png','left_2.png',
              'left_3.png','left_4.png',
              'left_5.png','left_6.png']


BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

class Player(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((32, 32))
        self.rect = self.image.get_rect()  # Get rect of some size as 'image'.
        self.image.fill(WHITE)
        self.velocity = [0, 0]

    def update(self):
        self.rect.move_ip(*self.velocity)


player = Player()
background_image = ("bg.jpg")
running = True
while running:
    dt = clock.tick(FPS) / 1000  # Returns milliseconds between each call to 'tick'. The convert time to seconds.
    screen.fill(BLACK)  # Fill the screen with background color.
    background_image = pygame.image.load('bg.jpg')

    pygame.draw.rect(pygame, (0, 0, 0), (40, 60, random.randrangÐµ(500), y - 5, y = 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_w:
                player.velocity[1] = -200 * dt  # 200 pixels per second
            elif event.key == pygame.K_s:
                player.velocity[1] = 200 * dt
            elif event.key == pygame.K_a:
                player.velocity[0] = -200 * dt
                right
            elif event.key == pygame.K_d:
                player.velocity[0] = 200 * dt
                left
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_w or event.key == pygame.K_s:
                player.velocity[1] = 0
            elif event.key == pygame.K_a or event.key == pygame.K_d:
                player.velocity[0] = 0

    player.update()

    screen.blit(background_image, (0, 0))
    screen.blit(player_image, player.rect)
    pygame.display.update()  # Or pygame.display.flip()

    if player.rect.right > player.rect.left and \
       player.rect.left < player.rect.right and \
       player.rect.bottom > player.rect.top and \
       player.rect.top < player.rect.bottom:
           collide = True

print("Exited the game loop. Game will quit...")
quit()  # Not actually necessary since the script will exit anyway.
